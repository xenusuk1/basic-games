#lang "qb"
'Practical Computing July 1983
' https://www.bath.ac.uk/announcements/professor-john-hudson-1947-2018/
'This program simulates the UK economy from 1979-83 during the first premiership of Margaret Thatcher
'The period was known for the first use of the economic Monetarism theory
'This was used to tame rampant inflation at the time
'The program uses an economic model fairly mainstream in 1983, but no longer current
'This looks to me as a modified Keynesian model with reasonable lags
'The money supply controls the interest rate, but the interest rate has little effect on the general economy other than investment
'Interest rate doesn't affect the exchange rate or imports/exports
'Inflation is mainly autoregressive but can be reduced through high unemployment
'Unemployment depends on economic activity (GDP) which can be affected by altering government spending or the tax rate
'
'The model accurately tracks the actual results by adding a set of correction factors to get the right result
'These can be thought of as additions that the main model parameters don't take into account or fudge factors to get the actual results
'Left as an exercise, what happens if the correction factors are set to 1 (no correction)?

'All models are wrong, but some are useful - George Box
'Further reading: https://www.nuff.ox.ac.uk/economics/papers/2020/2020W01_MacroHist18.pdf

'The score is a simple addition by me to rate the state of the economy, and treats inflation & unemployment as a bit more important
'By increasing govt expenditure, you can greatly increase GDP and Consumption whilst reducing unemployment but inflation remains out of control
'Is this a better result than following the real approach of reducing inflation by increasing unemplooyment first?

CLS
PRINT "****MACRO ECONOMIC MODEL OF THE UK****"
PRINT "****BY DR. JOHN HUDSON****"
PRINT  "****UNIVERSITY OF BATH****"
DIM SHARED X(50,40), Y(50,40), Z(20), C(30,10)
DIM SHARED S,N,M, I, J,Q,FLAG AS INTEGER
DIM SHARED CR

S=0
READ N, M
FOR I=1 TO M
FOR J=1 TO N
	READ X(J,I)
NEXT J: NEXT I

' Read correction factors
FOR I=1 TO 8
FOR J=1 TO N
	IF J>7 THEN
		READ C(J,I)
	ELSE
		C(J,I)=1.0
	END IF
NEXT J: NEXT I

FOR J=1 TO N
	REM UNEMPLOYMENT RATIO
	X(J,20) = (X(J,7)/X(J,15))*100
	REM PUBLIC SECTOR BORROWING
	X(J,21)=X(J, 13)-(X(J, 10)-X(J, 12))
	REM INVESTMENT IN STOCKS
	X(J,24)=X(J,10)-X(J,1)-X(J,2)-X(J,14)+X (J,3) -X(J,13)
	REM REAL WAGE
	X(J,18)=X (J,6) /X(J,5)
	REM DIRECT TAX RATE
	X(J,30)=1-(X(J, 12)/X(J,11))
	REM INDIRECT TAX RATE
	X(J,31) = (X(J, 10)/X(J,11))-1
	REM TIME TREND
	X(J,34)=J+43
	REM NORTH SEA OIL DUMMY
	IF J>17 THEN
		X(J,35)=24
	ELSE
		X(J,35)=X(J,34)-36
	END IF
	REM COMMON MARKET DUMMY
	X(J,36)=1
NEXT J

FOR J=5 TO N
	REM PRICE INFLATION
	X(J,19)=((X(J,5)-X(J-4,5))/X(J-4,5) ) *100
	REM WAGE INFLATION
	X(J,17)=((X(J,6)-X(J-4,6))/X(J-4,6) )*100
	REM RAW MATERIAL PRICE INFLATION
	X(J,22) = (X(J, 16)-X(J-4,16)/X(J-4,16 ))
NEXT J

REM INCOMES POLICY DUMMY
FOR J=1 TO 8
	X(J,38)=1.0
NEXT J

REM POST INCOMES POLICY DUMMY
FOR J=12 TO 15
	X(J,39)=1.0
NEXT J

REM UNEMPLOYMENT DUMMY
FOR J=N-8 TO N
	X(J,23)=1.0
NEXT J

DATA 27, 16  'N,M
REM CONSUMERS EXPENDITURE X 1
DATA 15960, 16123, 16190, 16235, 16267, 16001, 16034
DATA 16154, 16394, 16854, 16939, 17230, 17199, 17389, 18358, 17698, 17964
DATA 18120, 17729, 17831, 17870, 18032, 17860, 17915, 17955, 17857, 17885
REM EXPORTS 2
DATA 7006, 7142, 7394, 7435, 7694, 7722, 7885
DATA 8161, 7826, 7924, 8020, 8083, 8169, 7402, 8756, 8374, 8491
DATA 8509, 8316, 8116, 8116, 7856, 8017, 8211, 8337, 7988, 8290

REM IMPORTS 3
DATA 7194, 7108, 7668, 7710, 7746, 7600, 7844
DATA 7667, 7448, 7872, 7800, 8076, 8010, 8143, 9082, 9042, 9052
DATA 8793, 8914, 8360, 8076, 7688, 8261, 9243, 8895, 8695, 9048
REM MONEY SUPPLY 4
DATA 17080, 17940, 18530, 19100, 18980, 19540, 20530
DATA 22020, 23180, 24350, 25090, 26010, 27020, 27580, 28250, 28950, 29470
DATA 29360, 29950, 29800, 30730, 31880, 33000, 33410, 35710, 36570, 37530
REM PRICE LEVEL 5
DATA 107.0, 110.9, 114.9, 117.6, 123.0, 129.2, 134.9
DATA 137.0, 139.0, 141.4, 145.3, 147.8, 150.3, 155.0, 160.7, 171.4, 176.2
DATA 184.6, 195.3, 199.4, 203.2, 208.0, 218.1, 221.9, 227.4, 231.1, 238.5
REM WAGE LEVEL 6
DATA 192.6, 204.2, 211.5, 217.8, 219.3, 223.3, 225.9
DATA 228.7, 231.2, 237.8, 260.6, 265.8, 273.0, 284.9, 292.2, 299.9, 315.3
DATA 334.9, 348.3, 357.4, 366.6, 377.0, 385.5, 391.1, 396.4, 403.7, 410.5
'data fix 1252.7 is corrected from 122.7 based on ONS figures, so simulation result differs
REM UNEMPLOYMENT 7
DATA 1128.2, 1252.7, 1269.3, 1290.6, 1307.3, 1331.5, 1352.5
DATA 1400.1, 1423.1, 1412.7, 1390.9, 1365.0, 1333.9, 1349.4, 1305.2, 1266.8, 1287.1
DATA 1361.5, 1493.8, 1719.7, 2015.4, 2281.6, 2482.3, 2641.3, 2751.5, 2817.1, 2877.5
REM INTERNATIONAL PRICE COMPETITIVENESS 8
DATA  99.4, 100.7,  93.3,  92.8,  88.8,  96.4,  99.1
DATA 101.0, 103.7, 107.3, 101.0, 102.7, 102.9, 105.8, 113.5, 121.6, 118.4
DATA 125.6, 129.6, 133.0, 137.7, 141.4, 138.0, 128.0, 127.5, 130.6, 130.2
REM INTEREST RATES 9
DATA 11.25, 9, 11.5, 13, 14.25, 9.5,  8
DATA  6,  7,  6.5, 10,  10, 12.5,  13,  14, 16, 16, 17, 17, 16, 14.5, 12, 12, 12.5, 15, 13.5, 13
REM GDP AT MARKET PRICES 10
DATA 26432, 27068, 26792, 27171, 27513, 27201, 27302
DATA 27406, 28026, 28277, 28534, 28513, 28670, 28417, 29386, 29007, 29064, 28917
DATA 28294, 28277, 28175, 28303, 27658, 27476, 27956, 28256, 28073
REM GDP AT FACTOR COST 11
DATA 23855, 24465, 24128, 24474, 24726, 24567, 24684
DATA 24689, 25250, 25401, 25636, 25518, 25729, 25449, 26199, 26072, 25991
DATA 25717, 25443, 25243, 25085, 25143, 24722, 24533, 24893, 25149, 25171
REM DISPOSABLE INCOME 12
DATA 18235, 18467, 18030, 18619, 18243, 17992, 17551
DATA 18062, 18757, 18676, 19332, 20019, 20409, 20577, 20810, 20729, 21612
DATA 21092, 20873, 21410, 21396, 21197, 20604, 20654, 20448, 20635, 20232
REM GOVERNMENT EXPENDITURE 13
DATA 5859, 5791, 5837, 5802, 5783, 5697, 5764
DATA 5734, 5753, 5819, 5838, 5855, 5923, 5917, 5961, 5988, 5974
DATA 6062, 6022, 6081, 6146, 6055, 6069, 6156, 6114, 6207, 6190
REM INVESTMENT 14
DATA 5009, 5226, 5164, 5232, 5027, 4882, 5112
DATA 5035, 5132, 5271, 5327, 5161, 5077, 5058, 5196, 5281, 5363
DATA 5292, 5163, 5036, 4952, 4690, 4667, 4663, 4754, 4898, 4747

REM WORKING POPULATION 15
DATA 26040, 26051, 26129, 26154, 26191, 26208, 26299
DATA 26379, 26357, 26398, 26414, 26436, 26487, 26493, 26461, 26421, 26399
DATA 26329, 26341, 26277, 26218, 26130, 26082, 26039, 25933, 25851, 25754
REM RAW MATERIAL PRICE INDEX 16
DATA 110.5, 115.4, 124.6, 129.9, 138.9, 144.8, 148.8
DATA 146.5, 142.2, 140.2, 146.3, 144.9, 147.1, 153.4, 163.3, 169.9, 183.9
DATA 197.2, 201.3, 201.9, 203.3, 213.8, 225.8, 235.9, 237.3, 238.2, 240.0
REM CORRECTION FACTORS C 1-8
DATA .9755, .9750, .9491, .94784, .9587, .9757, 1.027, .978, 1.0361, 1.020
DATA 1.020, 1.047, 1.030, 1.021, 1.001, 1.012, 1.039, 1.010, 1.020, 1.023

DATA .981225, .9736, .9403,.9425,.9459, .9722, .9977, .9508, 1.009, 1.016
DATA 1.010, 1.039, 1.0401, 1.0387,1.0203, 1.0196, 1.0219, 1.0094, 1.0163, 1.0099

DATA 1.027, 1.0212, .9445, .9611, .9579, .9792, .9843, .9855, 1.0154,.9666
DATA 1.054, 1.0346, 1.045, 1.08, 1.0908, 1.0674, 1.040, 1.0068, .998, 1.0075

DATA .8616, .9372, .8888, .89577, .9017, .9374, 1.1211, .91424, 1.0551, 1.0041
DATA .9784, 1.02323, 1.00596, .974154, .97334, .94191, .94892, .905534, .98582, .96284

DATA 0.9189, 0.9841, 0.9062, 0.9318, 0.9044, 0.9498, 1.0011, 0.8795, 0.9612, 0.9517
DATA 0.9661, 0.9714, 1.016, 1.0363, 1.0714, 0.9836, 0.90205, 0.90421, 0.9558, 0.9186

DATA 1.6767, 1.374, 1.5548, 1.0422, 1.1246, .9312, .9528, .9473, .7915, .9549
DATA .884, .9098, 1.057, 1.1582, 1.3418, 1.317, 1.2594, 1.0032, 1.0913, 1.1483

DATA 1.0155, 1.0211, 1.09109, 1.1638, 1.24036, 1.2911, 1.2401, 1.2922, 1.2643
DATA 1.2304, 1.177, 1.0758, .9724, .8851, .8529, .8622, .8687, .9092, .94307, .97663

DATA .9466, 1.1512, 1.5977, 2.0018, 2.0484, 1.868, 1.5006, 1.4701, 1.0437, 1.0014
DATA .98893, .9048, 1.253, 1.265, 1.3707, 1.3212, 1.2122, 1.022, 1.0474, 1.1569

CR=0.001
FOR I=1 TO 39
FOR J= 1 TO N
Y(J, I) = X(J, I)
NEXT J: NEXT I

J=7

'READ debug
'FOR I = 1 TO 8
'FOR J = 1 TO N
'PRINT C(J,I); " ";
'NEXT
'PRINT
'NEXT
'STOP

DO
'main loop
PRINT
PRINT "YEAR "; 1976+INT((J-2)/4); " QUARTER ";J-INT((J-2)/4)*4-1;
PRINT
PRINT "VARIABLE"; TAB(26);"LAST VALUE";  TAB (41); "NEW VALUE"; TAB (56); "ACTUAL VALUE"
PRINT
PRINT "GDP AT MARKET PRICES £M"; TAB(26); INT(Y(J-1,10)/C(J-1,1)); TAB(41);INT(Y(J,10)/C(J,1)); TAB(56); X(J,10)
PRINT "CONSUMPTION £M"; TAB(26); INT(Y(J-1,1)/C(J-1,2)); TAB (41); INT(Y(J,1)/C(J,2)); TAB (56); X(J,1)
PRINT "INVESTMENT £M"; TAB(26); INT(Y(J-1,14)/C(J-1,3)); TAB (41); INT(Y(J,14)/C(J,3)); TAB (56); X(J,14)
PRINT "EXPORTS £M"; TAB (26); INT(Y(J-1,2)/C(J-1,4)); TAB (41); INT(Y(J,2)/C(J,4)); TAB (56); X(J,2)
PRINT "IMPORTS £M"; TAB (26); INT(Y(J-1,3)/C(J-1,5));  TAB (41); INT(Y(J,3)/C(J,5)); TAB (56); X(J,3)
PRINT "INTEREST RATE %";
PRINT USING "##.#"; TAB (26); Y(J-1,9)/C(J-1,6); TAB (41); Y(J,9)/C(J,6); TAB (56); X(J,9)
PRINT "UNEMPLOYMENT %";
PRINT USING "##.#"; TAB (26); Y(J-1,20)/C(J-1,7); TAB (41); Y(J,20)/C(J,7); TAB (56); X(J,20)
PRINT "INFLATION %";
PRINT USING "##.#"; TAB (26); Y(J-1,19)/C(J-1,8);  TAB (41); Y(J,19)/C(J,8); TAB (56); X(J,19)

' compute a score comparing value with actual
S=S+(Y(J,10)/C(J,1)/X(J,10)-1) + (Y(J,1) / C(J,2)/X(J,1)-1) + ( Y(J,14)/ C(J,3) /  X(J,14)-1) - (Y(J,9)/C(J,6) / X(J,9)-1 )
S=S + (((Y(J,2)/C(J,4)) -(Y(J,3)/C(J,5)) )/(X(J,2)-X(J,3))-1 ) - 2*( Y(J,20)/C(J,7) / X(J,20)-1) - 2*(Y(J,19)/C(J,8) /X(J,19)-1)

PRINT "Score "; S

J=J+1

' end the game after 20 turns
IF J=28 THEN EXIT DO

PRINT
IF NOT (J-INT(J/4)*4+1>1 OR J=8) THEN
	PRINT "DO YOU WANT TO RESIGN AS CHANCELLOR OF THE EXCHEQUER ";
	INPUT A$
	IF UCASE$(LEFT$(A$,1))="Y" THEN EXIT DO
END IF

PRINT
PRINT "POLICY OPTIONS"
PRINT "GOVERNMENT EXPENDITURE (ORIG/LAST)= ";X(J,13);Y(J-1,13); TAB(56);"NEW AMOUNT";
INPUT Y(J, 13)
PRINT "MONEY SUPPLY (ORIG/LAST)= ";X(J ,4);Y(J-1,4); TAB(56);"NEW AMOUNT";
INPUT Y (J, 4)
PRINT "DIRECT TAX % RATE (ORIG/LAST)= "; X(J,30);Y(J-1,30); TAB(56);"NEW RATE";
INPUT Y(J,30)
PRINT "INDIRECT TAX % RATE (ORIG/LAST)= ";X(J,31);Y(J-1,31); TAB(56);"NEW RATE";
INPUT Y(J,31)

' lagged GDP
Y(J,10)=Y(J-1,1)+Y(J-1,14)+Y(J-1,2)-Y(J-1,3)+Y(J,13)+Y(J,24)

CALL Iterate

LOOP
PRINT "End of Game"
END


SUB Iterate
' Iteration loop refactor
Q=1
PRINT : PRINT "ITERATION";

'start loop
DO

IF Q>1 THEN Y(J,10)=Y(J,1)+Y(J,14)+Y(J,2)-Y(J,3)+Y(J,13)+Y(J,24)

'GDP no lag when Q>1

REM GDP AT FACTOR COST
Y(J,11)=Y(J,10)/(1+Y(J,31))

REM DISPOSABLE INCOME
Y(J,12)=Y(J,11)*(1-Y(J,30))

REM PUBLIC SECTOR BORROWING REQUIREMENT
Y(J,21)=Y(J,13)-(Y(J,10)-Y(J,12))

REM UNEMPLOYMENT - natural logs
Y(J,20) = EXP(12.77-1.29*LOG(Y(J,11)) +0.00957*X(J,34) +0.8804*LOG(Y(J-1,20)))

REM WAGE INFLATION
' high unemployment reduces inflation A=1
IF Y(J, 20)>6.5 THEN A=1 ELSE A=0
Y(J,17)=54.66+1.0*Y(J-1,19)-41.75*(Y(J-4,6)/Y(J-4,5))+2.00* (Y(J,39))+0.319 *Y(J,34) -3.41*Y(J,38)-1.80*A*(Y(J,20))

REM PRICE INFLATION
Y(J,19)=-0.2211+0.14*Y(J-1,17)-0.7264*Y(J,38)+0.00987*Y(J-1,22)+0.813*Y(J-1,19)-0.1*A*Y(J-1,19)

REM PRICE LEVEL
Y(J,5)=Y(J-4,5)*(1+(Y(J,19)/100))

REM CONSUMERS EXPENDITURE
Y(J,1)=1370+0.312*Y(J,12)+0.57*Y(J-1,1)-10.00*Y(J,19)

REM EXPORTS
Y(J,2)=-6631+0.571*Y(J,11)-0.000250 *Y(J-1,11)*Y(J-3,8)+30.51*Y(J,35)

REM IMPORTS
Y(J,3)=-4948+0.404*Y(J,10)+0.000507 *(Y(J, 10)*Y(J-1,8)) -10.089*Y(J,35)+482* Y(J,37)

REM INTEREST RATE
Y(J,9)=0.89+0.000838*Y(J-1,10)-0.055*(Y(J,4)/Y(J,5))+0.00142*Y(J,21)

REM INVESTMENT
Y(J, 14)=-588.02-31.4*Y(J-2,9)+6.58* Y(J-2, 19)+0.28*Y(J-2, 11)-18.19*Y(J,34)

REM WAGE LEVEL
Y(J, 6)=Y(J-4, 6)*(1+(Y(J, 17)/100))

PRINT Q ; " ";
FLAG=1
IF Q>1 THEN  'skip for first loop

	FLAG=0
	FOR I=1 TO 20
		IF Z(I) <> 0 THEN
		IF ABS ((Y(J,I)-Z(I))/Z(I))>CR THEN  FLAG=1
		END IF
	NEXT I

	IF FLAG=0 THEN PRINT "CONVERGENCE ACHIEVED AFTER" ;Q;" ITERATIONS"
END IF 'Q>1

' Z(I) holds result of last iteration
FOR I=1 TO 20
	Z(I)=Y(J,I)
NEXT I

Q=Q+1
IF Q>20 THEN PRINT "CONVERGENCE NOT ACHIEVED"
LOOP UNTIL (Q>20) OR (FLAG=0)

END SUB  'Iterate



